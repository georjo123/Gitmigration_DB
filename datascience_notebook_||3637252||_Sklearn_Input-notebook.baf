{"dslabserviceresp":{"bizvizWorkspace":"{\"reserv1\":null,\"reserv2\":null,\"reserv3\":null,\"reserv4\":null,\"reserv5\":null,\"createdDate\":1675741130176,\"isActive\":0,\"lastUpdatedDate\":null,\"active\":1,\"migrationId\":null,\"id\":2555916,\"name\":\"Sanity Project\",\"count\":null,\"parentId\":null,\"userId\":\"2424835\",\"isFile\":false,\"infoJson\":\"{\\\"imageVersion\\\":\\\"v8.0.0-1\\\",\\\"external_libraries\\\":\\\"\\\",\\\"imageName\\\":\\\"reg-dev.bdb.ai/release/dsnotebook\\\",\\\"confDetails\\\":{\\\"high\\\":{\\\"nonspark\\\":{\\\"request\\\":{\\\"memory\\\":\\\"2048Mi\\\",\\\"cpu\\\":\\\"1000m\\\"},\\\"limit\\\":{\\\"memory\\\":\\\"4048Mi\\\",\\\"cpu\\\":\\\"2500m\\\"}}},\\\"low\\\":{\\\"realtime\\\":{\\\"nonspark\\\":{\\\"request\\\":{\\\"memory\\\":\\\"1024Mi\\\",\\\"cpu\\\":\\\"500m\\\"},\\\"limit\\\":{\\\"memory\\\":\\\"1024Mi\\\",\\\"cpu\\\":\\\"1000m\\\"}}}},\\\"medium\\\":{\\\"nonspark\\\":{\\\"request\\\":{\\\"memory\\\":\\\"4096Mi\\\",\\\"cpu\\\":\\\"1000m\\\"},\\\"limit\\\":{\\\"memory\\\":\\\"5048Mi\\\",\\\"cpu\\\":\\\"1000m\\\"}}}},\\\"idle_shutdown\\\":\\\"2h\\\",\\\"apiImageVersion\\\":\\\"v8.0.0-1\\\",\\\"appName\\\":\\\"sanityproject-dkcf\\\",\\\"git_project\\\":\\\"\\\",\\\"project_name\\\":\\\"Sanity Project\\\",\\\"environment\\\":\\\"PythonTensorFlow\\\",\\\"project_description\\\":\\\"Nill\\\",\\\"Algorithms\\\":\\\"\\\",\\\"gpuLimit\\\":\\\"\\\",\\\"resource_allocation\\\":\\\"high\\\",\\\"apiImageName\\\":\\\"reg-dev.bdb.ai/release/dsmodelapi\\\",\\\"gpuType\\\":\\\"\\\"}\",\"spaceKey\":\"1111\",\"type\":10,\"status\":1,\"contentJson\":\"[{\\\"queryservicename\\\":\\\"Sklearn_Input\\\",\\\"id\\\":2686981,\\\"type\\\":\\\"Data Sets\\\",\\\"uuid\\\":\\\"11111675742203865\\\"},{\\\"queryservicename\\\":\\\"Abalone_V1\\\",\\\"id\\\":2686980,\\\"type\\\":\\\"Data Sets\\\",\\\"uuid\\\":\\\"11111675742098889\\\"},{\\\"queryservicename\\\":\\\"Titanic_data_V1\\\",\\\"id\\\":3047496,\\\"type\\\":\\\"Data Sandbox\\\",\\\"uuid\\\":\\\"11111675741264035\\\"}]\",\"templateJson\":null,\"isShared\":null,\"updatedBy\":null,\"uuid\":\"11111675741130176\",\"createdUserName\":null}","envVariables":[],"utility":"[]","notebookContent":"{\"nbformat_minor\":2,\"metadata\":{},\"cells\":[{\"outputs\":[],\"metadata\":{\"id\":\"3637252_0.7194121712367134\"},\"execution_count\":1,\"source\":[\"def Sklearn_Input():\\n    from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\n    nb = NotebookExecutor()\\n    df_Sklearn_Input = nb.get_data('11111675742203865', '@SYS.USERID', 'False',{},[])\\n    return df_Sklearn_Input\"],\"cell_type\":\"code\"},{\"outputs\":[],\"metadata\":{\"id\":\"3637252_0.1615756956489296\"},\"execution_count\":2,\"source\":[\"df = Sklearn_Input()\"],\"cell_type\":\"code\"},{\"outputs\":[],\"metadata\":{\"id\":\"3637252_0.8054310527051114\"},\"execution_count\":3,\"source\":[\"from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\nnb = NotebookExecutor()\\nloaded_model = nb.load_saved_model('11111675741191375')\"],\"cell_type\":\"code\"},{\"outputs\":[{\"metadata\":{},\"data\":{\"text/html\":[\"<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n<\\/style>\\n<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n  <thead>\\n    <tr style=\\\"text-align: right;\\\">\\n      <th><\\/th>\\n      <th>preg<\\/th>\\n      <th>plas<\\/th>\\n      <th>pres<\\/th>\\n      <th>skin<\\/th>\\n      <th>test<\\/th>\\n      <th>mass<\\/th>\\n      <th>pedi<\\/th>\\n      <th>age<\\/th>\\n      <th>predictions<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n  <tbody>\\n    <tr>\\n      <th>0<\\/th>\\n      <td>6<\\/td>\\n      <td>148<\\/td>\\n      <td>72<\\/td>\\n      <td>35<\\/td>\\n      <td>0<\\/td>\\n      <td>33.6<\\/td>\\n      <td>0.627<\\/td>\\n      <td>50<\\/td>\\n      <td>0.0<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>1<\\/th>\\n      <td>1<\\/td>\\n      <td>85<\\/td>\\n      <td>66<\\/td>\\n      <td>29<\\/td>\\n      <td>0<\\/td>\\n      <td>26.6<\\/td>\\n      <td>0.351<\\/td>\\n      <td>31<\\/td>\\n      <td>0.0<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>2<\\/th>\\n      <td>8<\\/td>\\n      <td>183<\\/td>\\n      <td>64<\\/td>\\n      <td>0<\\/td>\\n      <td>0<\\/td>\\n      <td>23.3<\\/td>\\n      <td>0.672<\\/td>\\n      <td>32<\\/td>\\n      <td>0.0<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>3<\\/th>\\n      <td>1<\\/td>\\n      <td>89<\\/td>\\n      <td>66<\\/td>\\n      <td>23<\\/td>\\n      <td>94<\\/td>\\n      <td>28.1<\\/td>\\n      <td>0.167<\\/td>\\n      <td>21<\\/td>\\n      <td>0.0<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>4<\\/th>\\n      <td>0<\\/td>\\n      <td>137<\\/td>\\n      <td>40<\\/td>\\n      <td>35<\\/td>\\n      <td>168<\\/td>\\n      <td>43.1<\\/td>\\n      <td>2.288<\\/td>\\n      <td>33<\\/td>\\n      <td>1.0<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>...<\\/th>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>763<\\/th>\\n      <td>10<\\/td>\\n      <td>101<\\/td>\\n      <td>76<\\/td>\\n      <td>48<\\/td>\\n      <td>180<\\/td>\\n      <td>32.9<\\/td>\\n      <td>0.171<\\/td>\\n      <td>63<\\/td>\\n      <td>1.0<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>764<\\/th>\\n      <td>2<\\/td>\\n      <td>122<\\/td>\\n      <td>70<\\/td>\\n      <td>27<\\/td>\\n      <td>0<\\/td>\\n      <td>36.8<\\/td>\\n      <td>0.340<\\/td>\\n      <td>27<\\/td>\\n      <td>0.0<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>765<\\/th>\\n      <td>5<\\/td>\\n      <td>121<\\/td>\\n      <td>72<\\/td>\\n      <td>23<\\/td>\\n      <td>112<\\/td>\\n      <td>26.2<\\/td>\\n      <td>0.245<\\/td>\\n      <td>30<\\/td>\\n      <td>1.0<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>766<\\/th>\\n      <td>1<\\/td>\\n      <td>126<\\/td>\\n      <td>60<\\/td>\\n      <td>0<\\/td>\\n      <td>0<\\/td>\\n      <td>30.1<\\/td>\\n      <td>0.349<\\/td>\\n      <td>47<\\/td>\\n      <td>0.0<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>767<\\/th>\\n      <td>1<\\/td>\\n      <td>93<\\/td>\\n      <td>70<\\/td>\\n      <td>31<\\/td>\\n      <td>0<\\/td>\\n      <td>30.4<\\/td>\\n      <td>0.315<\\/td>\\n      <td>23<\\/td>\\n      <td>0.0<\\/td>\\n    <\\/tr>\\n  <\\/tbody>\\n<\\/table>\\n<p>768 rows Ã— 9 columns<\\/p>\\n<\\/div>\"],\"text/plain\":[\"     preg  plas  pres  skin  test  mass   pedi  age  predictions\\n0       6   148    72    35     0  33.6  0.627   50          0.0\\n1       1    85    66    29     0  26.6  0.351   31          0.0\\n2       8   183    64     0     0  23.3  0.672   32          0.0\\n3       1    89    66    23    94  28.1  0.167   21          0.0\\n4       0   137    40    35   168  43.1  2.288   33          1.0\\n..    ...   ...   ...   ...   ...   ...    ...  ...          ...\\n763    10   101    76    48   180  32.9  0.171   63          1.0\\n764     2   122    70    27     0  36.8  0.340   27          0.0\\n765     5   121    72    23   112  26.2  0.245   30          1.0\\n766     1   126    60     0     0  30.1  0.349   47          0.0\\n767     1    93    70    31     0  30.4  0.315   23          0.0\\n\\n[768 rows x 9 columns]\"]},\"output_type\":\"execute_result\",\"execution_count\":5}],\"metadata\":{\"id\":\"3637252_0.6867627243671133\"},\"execution_count\":4,\"source\":[\"nb.predict(model = loaded_model, dataframe = df, modeltype='ml') \\n #Choose modeltype 'ml' for machine learning models and 'cv' for computer vision model \\n #ex: For machine learning model nb.predict(model = model, modeltype = 'ml', dataframe = df) \\n #ex: For computer vision keras model nb.predict(model = model, modeltype = 'cv', imgs = imgs, imgsize = (28, 28), dim = 1, class_names = class_names) \\n #and for pytorch model(model = model, modeltype = 'cv', imgs = imgs, class_names = class_names) \\n #Note: incase any error in prediction user squeezed image data in keras\"],\"cell_type\":\"code\"}],\"nbformat\":4}","notebook":"{\"migrationId\":null,\"id\":3637252,\"projectId\":2555916,\"spaceKey\":\"1111\",\"notebookName\":\"Sklearn_Input\",\"data\":\"{\\\"datasets\\\":[{\\\"queryservicename\\\":\\\"Sklearn_Input\\\",\\\"id\\\":2686981,\\\"type\\\":\\\"Data Sets\\\",\\\"uuid\\\":\\\"11111675742203865\\\",\\\"isSelected\\\":true}],\\\"uncheckeddatasets\\\":[],\\\"code\\\":[{\\\"id\\\":\\\"3637252_0.7194121712367134\\\",\\\"code\\\":\\\"def Sklearn_Input():\\\\n    from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\\\n    nb = NotebookExecutor()\\\\n    df_Sklearn_Input = nb.get_data('11111675742203865', '@SYS.USERID', 'False',{},[])\\\\n    return df_Sklearn_Input\\\",\\\"count\\\":1,\\\"mode\\\":\\\"preview\\\",\\\"type\\\":\\\"code\\\",\\\"hover\\\":true,\\\"interrupt\\\":false,\\\"warning\\\":false,\\\"outputArray\\\":[],\\\"lineNumber\\\":false,\\\"laodmodel\\\":false,\\\"pre_cell_id\\\":0,\\\"is_pre_cell\\\":false,\\\"succORerr\\\":true,\\\"expand\\\":false,\\\"outputexpand\\\":false,\\\"readonly\\\":false,\\\"markDowns\\\":false,\\\"loader\\\":false,\\\"image\\\":\\\"\\\",\\\"error\\\":\\\"\\\",\\\"result\\\":\\\"\\\",\\\"algorithms\\\":\\\"\\\",\\\"semicolon\\\":\\\"\\\",\\\"cputimes\\\":\\\"\\\",\\\"showcputime\\\":false,\\\"secret\\\":[]},{\\\"id\\\":\\\"3637252_0.1615756956489296\\\",\\\"code\\\":\\\"df = Sklearn_Input()\\\",\\\"count\\\":2,\\\"mode\\\":\\\"preview\\\",\\\"type\\\":\\\"code\\\",\\\"hover\\\":true,\\\"interrupt\\\":false,\\\"warning\\\":false,\\\"outputArray\\\":[],\\\"lineNumber\\\":false,\\\"laodmodel\\\":false,\\\"pre_cell_id\\\":0,\\\"is_pre_cell\\\":false,\\\"succORerr\\\":true,\\\"expand\\\":false,\\\"outputexpand\\\":false,\\\"readonly\\\":false,\\\"markDowns\\\":false,\\\"loader\\\":false,\\\"image\\\":\\\"\\\",\\\"error\\\":\\\"\\\",\\\"result\\\":\\\"\\\",\\\"algorithms\\\":\\\"\\\",\\\"semicolon\\\":\\\"\\\",\\\"cputimes\\\":\\\"\\\",\\\"showcputime\\\":false,\\\"secret\\\":[]},{\\\"id\\\":\\\"3637252_0.8054310527051114\\\",\\\"code\\\":\\\"from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\\\nnb = NotebookExecutor()\\\\nloaded_model = nb.load_saved_model('11111675741191375')\\\",\\\"count\\\":3,\\\"mode\\\":\\\"preview\\\",\\\"type\\\":\\\"code\\\",\\\"hover\\\":true,\\\"interrupt\\\":false,\\\"warning\\\":false,\\\"outputArray\\\":[],\\\"lineNumber\\\":false,\\\"laodmodel\\\":false,\\\"pre_cell_id\\\":0,\\\"is_pre_cell\\\":false,\\\"succORerr\\\":true,\\\"expand\\\":false,\\\"outputexpand\\\":false,\\\"readonly\\\":false,\\\"markDowns\\\":false,\\\"loader\\\":false,\\\"image\\\":\\\"\\\",\\\"error\\\":\\\"\\\",\\\"result\\\":\\\"\\\",\\\"algorithms\\\":\\\"\\\",\\\"semicolon\\\":\\\"\\\",\\\"cputimes\\\":\\\"\\\",\\\"showcputime\\\":false,\\\"secret\\\":[]},{\\\"id\\\":\\\"3637252_0.6867627243671133\\\",\\\"code\\\":\\\"nb.predict(model = loaded_model, dataframe = df, modeltype='ml') \\\\n #Choose modeltype 'ml' for machine learning models and 'cv' for computer vision model \\\\n #ex: For machine learning model nb.predict(model = model, modeltype = 'ml', dataframe = df) \\\\n #ex: For computer vision keras model nb.predict(model = model, modeltype = 'cv', imgs = imgs, imgsize = (28, 28), dim = 1, class_names = class_names) \\\\n #and for pytorch model(model = model, modeltype = 'cv', imgs = imgs, class_names = class_names) \\\\n #Note: incase any error in prediction user squeezed image data in keras\\\",\\\"count\\\":4,\\\"mode\\\":\\\"preview\\\",\\\"type\\\":\\\"code\\\",\\\"hover\\\":true,\\\"interrupt\\\":false,\\\"warning\\\":false,\\\"outputArray\\\":[],\\\"lineNumber\\\":false,\\\"laodmodel\\\":false,\\\"pre_cell_id\\\":0,\\\"is_pre_cell\\\":false,\\\"succORerr\\\":true,\\\"expand\\\":false,\\\"outputexpand\\\":false,\\\"readonly\\\":false,\\\"markDowns\\\":false,\\\"loader\\\":false,\\\"image\\\":\\\"\\\",\\\"error\\\":\\\"\\\",\\\"result\\\":\\\"\\\",\\\"algorithms\\\":\\\"\\\",\\\"semicolon\\\":\\\"\\\",\\\"cputimes\\\":\\\"\\\",\\\"showcputime\\\":false,\\\"secret\\\":[]}],\\\"kernalID\\\":\\\"517d4066-f4b2-4f4f-811d-96d21297164f\\\",\\\"Algorithms\\\":[]}\",\"description\":\"\",\"createdDate\":1675742210948,\"lastUpdatedDate\":1675742349016,\"createdBy\":2424835,\"updatedBy\":2424835,\"status\":1,\"committedBy\":2424835,\"lastcommittedDate\":1675742210948,\"isShared\":null,\"customComponentscript\":\"{\\\"DSLAB_content\\\":\\\"[{\\\\\\\"id\\\\\\\":\\\\\\\"3637252_0.7194121712367134\\\\\\\",\\\\\\\"code\\\\\\\":\\\\\\\"def Sklearn_Input():\\\\\\\\n    from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\\\\\\\n    nb = NotebookExecutor()\\\\\\\\n    df_Sklearn_Input = nb.get_data('11111675742203865', '@SYS.USERID', 'False',{},[])\\\\\\\\n    return df_Sklearn_Input\\\\\\\",\\\\\\\"count\\\\\\\":0,\\\\\\\"error\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"code\\\\\\\",\\\\\\\"ischecked\\\\\\\":true}]\\\",\\\"pipeline_content\\\":\\\"\\\\\\\"def Sklearn_Input():\\\\\\\\n    from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\\\\\\\n    nb = NotebookExecutor()\\\\\\\\n    df_Sklearn_Input = nb.get_data('11111675742203865', '@SYS.USERID', 'False',{},[])\\\\\\\\n    return df_Sklearn_Input\\\\\\\"\\\",\\\"externalLibraries\\\":\\\"[]\\\"}\",\"type\":2,\"uuid\":\"11111675742210915\"}"}}